#!/usr/bin/env ruby
# frozen_string_literal: true

$:.unshift(File.expand_path("../lib", __dir__))
require "lox"
require "prettyprint"

source = File.read(ARGV.first)
suite = ENV.fetch("SUITE", "chap09_control")

case suite
in "chap04_scanning"
  Lox::Lexer.new(source).each do |token|
    value =
      case token
      in { type: :NUMBER, value: }
        number = Lox::Type::Number.new(value: value)
        literal = Lox::AST::Literal.new(value: number, location: nil)
        PrettyPrint.format(+"") { |q| literal.accept(Lox::Visitor::PrettyPrinter.new(q)) }
      in { type: :STRING, value: }
        value
      else
        "null"
      end

    puts "#{token.type} #{source[token.location.range]} #{value}"
  end
in "chap06_parsing"
  puts PrettyPrint.format(+"") { |q|
    Lox::Parser.new.parse_expression(Lox::Lexer.new(source)).accept(Lox::Visitor::PrettyPrinter.new(q))
  }
in "chap07_evaluating"
  puts Lox::Parser.new.parse_expression(Lox::Lexer.new(source)).accept(Lox::Visitor::Interpreter.new).to_lox
in "chap08_statements" | "chap09_control"
  exit Lox.interpret(source)
end
